@startuml
skinparam classAttributeIconSize 0

package "Presentation" #DDDDDD {
class ServiceSolicitationUI<<presentation>>{

}
}


package "Application" #DDDDDD {
class ServiceSolicitationController<<application>>{
+create()
+getCataloguesByUser()
+getServicesByCatalogue(oCatalogue)
+addResponse(response)
+addTicket(service, urgency, \nlimitDate, lstFiles)
+saveTicket(ticket)
}

}


package "Domain" #DDDDDD {
class Service<<Entity>><<Root>>{
+create()
}

class Form<<Entity>><<Root>>{
+create(name, formType, attributeList)
}

class Attribute<<Entity>>{
+create(name, label, description, regex, scriptPath, dataType
}

class Catalogue<<Entity>><<Root>>{
+create()
}

class Ticket<<Entity>><<Root>>{
+create(service, urgency, limitDate, lstFiles, lstResponses)
}

class TicketUrgency<<Value Object>>{
+createFormName(ticketUrgency)
-validate(ticketUrgency)
}

class TicketLimitDate<<Value Object>>{
+createFormName(ticketLimitDate)
-validate(ticketLimitDate)
}

class TicketFile<<Value Object>>{
+createFormName(ticketFile)
-validate(ticketFile)
}

class TicketResponse<<Value Object>>{
+createFormName(ticketResponse)
-validate(ticketResponse)
}
}

package Persistence #DDDDDD {
class PersistenceContext<<persistence>>{
+repositories()
}

class AppSettings<<persistence>>{
+instance()
+getRepositoryFactory()
}

package Factory #DDDDDD {
class RepositoryFactory<<persistence>>{
+create()
+servicos()
+catalogos()
+formularios()
}
}

package "Repository" #DDDDDD {

class ServiceRepository<<repository>>{
+create()
+findByCatalogue(oCatalogue)
}

class TicketRepository<<repository>>{
+create()
+save(ticket)
}

class CatalogueRepository<<repository>>{
+create()
+findByUser(user)
}

interface CatalogueRepositoryInterface{

}

interface TicketRepositoryInterface{

}

interface ServiceRepositoryInterface{

}

}



ServiceSolicitationUI ..> ServiceSolicitationController
ServiceSolicitationController ..> PersistenceContext

ServiceRepository ..> ServiceRepositoryInterface
TicketRepository ..> TicketRepositoryInterface
CatalogueRepository ..> CatalogueRepositoryInterface

AppSettings -> RepositoryFactory : creates
PersistenceContext -> AppSettings : implements

RepositoryFactory "1" -> "1" ServiceRepository : has
RepositoryFactory "1" -> "1" TicketRepository : has
RepositoryFactory "1" -> "1" CatalogueRepository : has

ServiceRepository "1" -> "*" Service : saves
TicketRepository "1" -> "*" Ticket : saves
CatalogueRepository "1" -> "*" Catalogue : saves

Catalogue "1" -> "*" Service : has
Service "1" -> "*" Form : has
Form "1" -> "1..*" Attribute : has

Ticket "1" -> "1..*" Service : has
Ticket "1" -> "1..*" TicketUrgency : has
Ticket "1" -> "1..*" TicketLimitDate : has
Ticket "1" -> "1..*" TicketFile : has
Ticket "1" -> "1..*" TicketResponse : has

@enduml
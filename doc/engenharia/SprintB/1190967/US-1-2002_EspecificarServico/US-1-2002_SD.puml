@startuml
autonumber
hide footbox

actor "Gestor de Serviços de Help Desk" as GSH

participant "<<presentation>>\nEspecificarServicoUI" as UI
participant "<<application>>\nEspecificarServicoController" as CTRL
participant "<<builder>>\nServicoBuilder" as SBD
participant "<<persistence>>\nPersistanceContext" as PC
participant "<<persistence>>\nAppSettings" as AS
participant "<<factory>>\nRepositoryFactory" as RF
database "<<repository>>\nCatalogoRepository" as CR
participant "<<builder>>\nFormularioBuilder" as FBD
database "<<repository>>\nFormularioRepository" as FR


activate GSH

GSH -> UI : envia um pedido para especificar um servico
activate UI
UI -> CTRL** : create()
UI -> GSH : solicita a introdução de dados (descricaoBreve, descricaoCompleta)
deactivate UI

GSH -> UI : introduz os dados
activate UI

UI -> CTRL : addServico(descricaoBreve, descricaoCompleta)
activate CTRL

CTRL -> SBD** : create
CTRL -> SBD : setDescricaoBreve(descricaoBreve)
activate SBD
deactivate SBD
CTRL -> SBD : setDescricaoCompleta(descricaoCompleta)
activate SBD
deactivate SBD
deactivate CTRL

UI -> GSH : pergunta se o serviço requer feedback
deactivate UI

GSH -> UI : seleciona se pretende ou não feedback neste serviço
activate UI

alt caso o serviço requeira feedback

UI -> GSH : solicita a duração máxima permitida para o feedback
deactivate UI

GSH -> UI : introduz a duração máxima
activate UI

UI -> CTRL : enableFeedback(duracao)
activate CTRL

CTRL -> SBD : setFeedback(true)
activate SBD
deactivate SBD

CTRL -> SBD : setFeedbackDuracao(duracao)
activate SBD
deactivate SBD
deactivate CTRL

end

UI -> CTRL : getCatalogos()
activate CTRL

CTRL -> PC : repositories()
activate PC

PC -> AS : instance()
activate AS
deactivate AS

PC -> AS : getRepositoryFactory()
activate AS

AS -> RF** : create
AS --> PC : factory
deactivate AS

PC --> CTRL : factory
deactivate PC

CTRL -> RF : catalogos()
activate RF

RF -> CR** : create
RF --> CTRL : catalogoRepository
deactivate RF

CTRL -> CR : all()
activate CR
CR --> CTRL : list
deactivate CR

CTRL --> UI : list
deactivate CTRL

UI -> GSH : mostra a lista de catálogos e solicita a escolha de um catálogo
deactivate UI

GSH -> UI : escolhe o catálogo onde será disponibilizado o serviço
activate UI

loop até não serem precisos mais formulários
UI -> GSH : solicita a introdução do nome do formulário
deactivate UI

GSH -> UI : introduz os dados
activate UI

UI -> CTRL : addFormulario()
activate CTRL

CTRL -> FBD** : create
CTRL -> SBD : setDescricaoBreve(descricaoBreve)
activate SBD
deactivate SBD
CTRL -> SBD : setDescricaoCompleta(descricaoCompleta)
activate SBD
deactivate SBD
deactivate CTRL

UI -> GSH : apresenta os tipos de formulário disponiveis
deactivate UI

GSH -> UI : seleciona o tipo de formulário
activate UI

loop até não serem precisos mais atributos
UI -> GSH : solicita a introdução de dados (tipo de dados, regex, descrição, script, label, nome)
deactivate UI

GSH -> UI : introduz os dados
activate UI

UI -> GSH : pergunta se deseja adicionar mais atributos ao formulário em questão
deactivate UI

GSH -> UI : responde se pretende ou não adicionar mais atributos
activate UI
end

UI -> GSH : pergunta se deseja adicionar mais formulários ao serviço em questão
deactivate UI

GSH -> UI : responde se pretende ou não adicionar mais formulários
activate UI
end

UI -> CTRL : saveFormulario()
activate CTRL

CTRL -> PC : repositories()
activate PC

PC -> AS : instance()
activate AS
deactivate AS

PC -> AS : getRepositoryFactory()
activate AS

AS -> RF** : create
AS --> PC : factory
deactivate AS

PC --> CTRL : factory
deactivate PC

CTRL -> RF : formularios()
activate RF

RF -> FR** : create
RF --> CTRL : catalogoRepository
deactivate RF

CTRL -> CR : all()
activate CR
CR --> CTRL : list
deactivate CR

CTRL --> UI : list
deactivate CTRL

UI -> GSH : valida, apresenta os dados do servico e solicita uma confirmação
deactivate UI

GSH -> UI : confirma
activate UI
UI -> GSH : regista o servico e informa do sucesso da operação
deactivate UI
deactivate UI
deactivate GSH

@enduml